<registry>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.cacheStopRequestVariables" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="cacheStopRequestVariables">
    <field type="plone.registry.field.Tuple">
      <default>
        <element>statusmessages</element>
        <element>SearchableText</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Variables in the request that prevent caching if present</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Request variables that prevent caching</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Request variables</title>
      </value_type>
    </field>
    <value>
      <element>statusmessages</element>
      <element>SearchableText</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.contentTypeRulesetMapping" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="contentTypeRulesetMapping">
    <field type="plone.registry.field.Dict">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Maps content type names to ruleset names</description>
      <key_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content type name</title>
      </key_type>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content type/ruleset mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Ruleset name</title>
      </value_type>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.enableCompression" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="enableCompression">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Determine whether GZip compression should be enabled for standard responses</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Enable GZip compression</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.purgedContentTypes" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="purgedContentTypes">
    <field type="plone.registry.field.Tuple">
      <default>
        <element>File</element>
        <element>Image</element>
        <element>News Item</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">List content types which should be purged when modified</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content types to purge</title>
      <value_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Content type name</title>
      </value_type>
    </field>
    <value>
      <element>AliasVocabulary</element>
      <element>FileAttachment</element>
      <element>ImageAttachment</element>
      <element>ATBooleanCriterion</element>
      <element>FormCaptchaField</element>
      <element>FormBooleanField</element>
      <element>Collection</element>
      <element>Topic</element>
      <element>Discussion Item</element>
      <element>EEARelationsContentType</element>
      <element>ATCurrentAuthorCriterion</element>
      <element>FormCustomScriptAdapter</element>
      <element>ATDateRangeCriterion</element>
      <element>FormDateField</element>
      <element>FormFixedPointField</element>
      <element>HelpCenterDefinition</element>
      <element>DepictionTool</element>
      <element>PDFTool</element>
      <element>EEARelationsTool</element>
      <element>HelpCenterErrorReference</element>
      <element>HelpCenterErrorReferenceFolder</element>
      <element>Event</element>
      <element>HelpCenterFAQ</element>
      <element>HelpCenterFAQFolder</element>
      <element>FieldsetStart</element>
      <element>FieldsetEnd</element>
      <element>FieldsetFolder</element>
      <element>File</element>
      <element>FormFileField</element>
      <element>Folder</element>
      <element>FormFolder</element>
      <element>ATDateCriteria</element>
      <element>HelpCenterGlossary</element>
      <element>HelpCenter</element>
      <element>HelpCenterLink</element>
      <element>HelpCenterHowTo</element>
      <element>HelpCenterHowToFolder</element>
      <element>VdexFileVocabulary</element>
      <element>Image</element>
      <element>inproximity</element>
      <element>HelpCenterKnowledgeBase</element>
      <element>FormLabelField</element>
      <element>LandFile</element>
      <element>LandSection</element>
      <element>LandItem</element>
      <element>HelpCenterLeafPage</element>
      <element>FormLinesField</element>
      <element>Link</element>
      <element>HelpCenterLinkFolder</element>
      <element>ATListCriterion</element>
      <element>FormMailerAdapter</element>
      <element>HelpCenterReferenceManualPage</element>
      <element>FormMultiSelectionField</element>
      <element>News Item</element>
      <element>PDFTheme</element>
      <element>Document</element>
      <element>FormPasswordField</element>
      <element>ATPathCriterion</element>
      <element>Plone Site</element>
      <element>ATPortalTypeCriterion</element>
      <element>FormLikertField</element>
      <element>ATReferenceCriterion</element>
      <element>HelpCenterReferenceManual</element>
      <element>HelpCenterReferenceManualFolder</element>
      <element>EEAPossibleRelation</element>
      <element>ATRelativePathCriterion</element>
      <element>FormRichLabelField</element>
      <element>FormRichTextField</element>
      <element>FormSaveDataAdapter</element>
      <element>HelpCenterReferenceManualSection</element>
      <element>ATSelectionCriterion</element>
      <element>FormSelectionField</element>
      <element>ATSimpleIntCriterion</element>
      <element>ATSimpleStringCriterion</element>
      <element>SimpleVocabulary</element>
      <element>SimpleVocabularyTerm</element>
      <element>ATSortCriterion</element>
      <element>SortedSimpleVocabulary</element>
      <element>FormStringField</element>
      <element>TempFolder</element>
      <element>FormTextField</element>
      <element>FormThanksPage</element>
      <element>TreeVocabulary</element>
      <element>TreeVocabularyTerm</element>
      <element>HelpCenterTutorial</element>
      <element>HelpCenterTutorialPage</element>
      <element>HelpCenterTutorialFolder</element>
      <element>HelpCenterInstructionalVideo</element>
      <element>HelpCenterInstructionalVideoFolder</element>
      <element>VocabularyLibrary</element>
      <element>FormIntegerField</element>
    </value>
  </record>
  <record name="plone.app.caching.interfaces.IPloneCacheSettings.templateRulesetMapping" interface="plone.app.caching.interfaces.IPloneCacheSettings" field="templateRulesetMapping">
    <field type="plone.registry.field.Dict">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Maps skin layer page template names to ruleset names</description>
      <key_type type="plone.registry.field.ASCIILine">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Page template name</title>
      </key_type>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Page template/ruleset mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.app.caching" ns0:translate="">Ruleset name</title>
      </value_type>
    </field>
    <value>
      <element key="file_view">plone.content.itemView</element>
      <element key="insitu-logo-climate.svg.dtml">plone.stableResource</element>
      <element key="rss.xml">plone.content.feed</element>
      <element key="image_view_fullscreen">plone.content.itemView</element>
      <element key="image_view">plone.content.itemView</element>
      <element key="folder_full_view">plone.content.itemView</element>
      <element key="insitu-logo-marine.svg">plone.stableResource</element>
      <element key="atom.xml">plone.content.feed</element>
      <element key="itunes.xml">plone.content.feed</element>
      <element key="search_rss">plone.content.feed</element>
      <element key="accessibility-info">plone.content.itemView</element>
      <element key="folder_listing">plone.content.itemView</element>
      <element key="sitemap">plone.content.itemView</element>
      <element key="RSS">plone.content.feed</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
    </value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.feed.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.anonOnly">
    <field ref="plone.app.caching.moderateCaching.anonOnly"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.lastModified">
    <field ref="plone.app.caching.moderateCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.file.vary">
    <field ref="plone.app.caching.moderateCaching.vary"/>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.anonOnly">
    <field ref="plone.app.caching.moderateCaching.anonOnly"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.etags">
    <field ref="plone.app.caching.moderateCaching.etags"/>
    <value/>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.lastModified">
    <field ref="plone.app.caching.moderateCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.ramCache">
    <field ref="plone.app.caching.moderateCaching.ramCache"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.smaxage">
    <field ref="plone.app.caching.moderateCaching.smaxage"/>
    <value>604800</value>
  </record>
  <record name="plone.app.caching.moderateCaching.plone.content.itemView.vary">
    <field ref="plone.app.caching.moderateCaching.vary"/>
    <value>X-Anonymous,Accept-Encoding</value>
  </record>
  <record name="plone.app.caching.moderateCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.moderateCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value>604800</value>
  </record>
  <record name="plone.app.caching.moderateCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.maxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the browser or caching proxy</description>
      <required>False</required>
      <title>Maximum age</title>
    </field>
    <value>604800</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.anonOnly">
    <field ref="plone.app.caching.strongCaching.anonOnly"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.etags">
    <field ref="plone.app.caching.strongCaching.etags"/>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.lastModified">
    <field ref="plone.app.caching.strongCaching.lastModified"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.maxage">
    <field ref="plone.app.caching.strongCaching.maxage"/>
    <value>604800</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.ramCache">
    <field ref="plone.app.caching.strongCaching.ramCache"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.smaxage">
    <field ref="plone.app.caching.strongCaching.smaxage"/>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.plone.content.file.vary">
    <field ref="plone.app.caching.strongCaching.vary"/>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.anonOnly">
    <field ref="plone.app.caching.strongCaching.anonOnly"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.etags">
    <field ref="plone.app.caching.strongCaching.etags"/>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.lastModified">
    <field ref="plone.app.caching.strongCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.maxage">
    <field ref="plone.app.caching.strongCaching.maxage"/>
    <value>86400</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.ramCache">
    <field ref="plone.app.caching.strongCaching.ramCache"/>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.smaxage">
    <field ref="plone.app.caching.strongCaching.smaxage"/>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.plone.resource.vary">
    <field ref="plone.app.caching.strongCaching.vary"/>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.plone.stableResource.lastModified">
    <field ref="plone.app.caching.strongCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.strongCaching.plone.stableResource.maxage">
    <field ref="plone.app.caching.strongCaching.maxage"/>
    <value>31536000</value>
  </record>
  <record name="plone.app.caching.strongCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.strongCaching.smaxage">
    <field type="plone.registry.field.Int">
      <description>Time (in seconds) to cache the response in the caching proxy. Leave blank to use value from "Maximum age" field.</description>
      <required>False</required>
      <title>Shared maximum age</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.strongCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.weakCaching.anonOnly">
    <field type="plone.registry.field.Bool">
      <description>Ensure logging users always get a fresh page. Note that if you are caching pages in a proxy cache, you'll still need to use a Vary response header to keep anonymous and authenticated content separate.</description>
      <required>False</required>
      <title>Only cache for anonymous users</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.etags">
    <field type="plone.registry.field.Tuple">
      <description>A list of ETag component names to include</description>
      <required>False</required>
      <title>ETags</title>
      <value_type type="plone.registry.field.ASCIILine"/>
    </field>
    <value/>
  </record>
  <record name="plone.app.caching.weakCaching.lastModified">
    <field type="plone.registry.field.Bool">
      <description>Turn on Last-Modified headers</description>
      <required>False</required>
      <title>Last-modified validation</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.feed.etags">
    <field ref="plone.app.caching.weakCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
    </value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.feed.ramCache">
    <field ref="plone.app.caching.weakCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.file.lastModified">
    <field ref="plone.app.caching.weakCaching.lastModified"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.folderView.etags">
    <field ref="plone.app.caching.weakCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
      <element>locked</element>
      <element>copy</element>
      <element>resourceRegistries</element>
    </value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.folderView.ramCache">
    <field ref="plone.app.caching.weakCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.itemView.etags">
    <field ref="plone.app.caching.weakCaching.etags"/>
    <value>
      <element>userid</element>
      <element>catalogCounter</element>
      <element>userLanguage</element>
      <element>skin</element>
      <element>locked</element>
      <element>resourceRegistries</element>
    </value>
  </record>
  <record name="plone.app.caching.weakCaching.plone.content.itemView.ramCache">
    <field ref="plone.app.caching.weakCaching.ramCache"/>
    <value>True</value>
  </record>
  <record name="plone.app.caching.weakCaching.ramCache">
    <field type="plone.registry.field.Bool">
      <description>Turn on caching in Zope memory</description>
      <required>False</required>
      <title>RAM cache</title>
    </field>
    <value>False</value>
  </record>
  <record name="plone.app.caching.weakCaching.vary">
    <field type="plone.registry.field.ASCIILine">
      <description>Name(s) of HTTP headers that must match for the caching proxy to return a cached response</description>
      <required>False</required>
      <title>Vary</title>
    </field>
    <value/>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.cachingProxies" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="cachingProxies">
    <field type="plone.registry.field.Tuple">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Provide the URLs of each proxy to which PURGE requests should be sent.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Caching proxies</title>
      <value_type type="plone.registry.field.URI"/>
    </field>
    <value>
      <element>http://varnish</element>
    </value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.domains" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="domains">
    <field type="plone.registry.field.Tuple">
      <default/>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">This option is only relevant if you are using virtual hosting and you have enabled the option to send PURGE requests with virtual hosting URLs above. If you your site is served on multiple domains e.g. http://example.org and http://www.example.org you may wish to purge both. If so, list all your domains here</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Domains</title>
      <value_type type="plone.registry.field.URI"/>
    </field>
    <value>
      <element>https://insitu.copernicus.eu:443</element>
      <element>http://insitu.copernicus.eu:80</element>
    </value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.enabled" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>True</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">If disabled, no purging will take place</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Enable purging</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.cachepurging.interfaces.ICachePurgingSettings.virtualHosting" interface="plone.cachepurging.interfaces.ICachePurgingSettings" field="virtualHosting">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">This option is only relevant if you are using virtual hosting with Zope's VirtualHostMonster. This relies on special tokens (VirtualHostBase and VirtualHostRoot) in the URL to instruct Zope about the types of URLs that the user sees. If virtual host URLs are in use and this option is set, PURGE requests will be sent to the caching proxy with the virtual hosting tokens in place. This makes sense if there is a web server in front of your caching proxy performing the rewrites necessary to translate a user-facing URL into a virtual hosting URL, so that the requests the caching proxy sees have the rewrite information in them. Conversely, if the rewrite is done in or behind the caching proxy, you want to disable this option, so that the PURGE requests use URLs that match those seen by the caching proxy as they come from the client.</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Send PURGE requests with virtual hosting paths</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.caching.interfaces.ICacheSettings.enabled" interface="plone.caching.interfaces.ICacheSettings" field="enabled">
    <field type="plone.registry.field.Bool">
      <default>False</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.caching" ns0:translate="">If not set, no caching operations will be attempted</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.caching" ns0:translate="">Globally enabled</title>
    </field>
    <value>True</value>
  </record>
  <record name="plone.caching.interfaces.ICacheSettings.operationMapping" interface="plone.caching.interfaces.ICacheSettings" field="operationMapping">
    <field type="plone.registry.field.Dict">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.caching" ns0:translate="">Maps rule set names to operation names</description>
      <key_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.caching" ns0:translate="">Rule set name</title>
      </key_type>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.caching" ns0:translate="">Rule set/operation mapping</title>
      <value_type type="plone.registry.field.DottedName">
        <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone.caching" ns0:translate="">Caching operation name</title>
      </value_type>
    </field>
    <value>
      <element key="plone.resource">plone.app.caching.strongCaching</element>
      <element key="plone.stableResource">plone.app.caching.strongCaching</element>
      <element key="plone.content.itemView">plone.app.caching.moderateCaching</element>
      <element key="plone.content.feed">plone.app.caching.moderateCaching</element>
      <element key="plone.content.folderView">plone.app.caching.moderateCaching</element>
      <element key="plone.content.file">plone.app.caching.moderateCaching</element>
    </value>
  </record>
  <record name="plone.caching.operations.chain.operations">
    <field type="plone.registry.field.List">
      <description>A list of operations to call, in order</description>
      <title>Operations</title>
      <value_type type="plone.registry.field.DottedName"/>
    </field>
    <value/>
  </record>
</registry>
