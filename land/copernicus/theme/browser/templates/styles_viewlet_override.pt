<tal:defines tal:define="
        sprops context/portal_properties/site_properties;
        preload_css sprops/preload_css|nothing;">
    <tal:styles define="view context/@@resourceregistries_styles_view"
                repeat="style view/styles">
        <tal:block define="rendering style/rendering;
                         condcomment style/conditionalcomment">
            <tal:wcondcomment tal:condition="condcomment">
                <tal:opencc tal:replace="structure string:&lt;!--[if ${condcomment}]&gt;" />
            </tal:wcondcomment>
            <tal:rendering-link condition="python: rendering == 'link'">
                <tal:csspreload tal:condition="preload_css">
                    <link rel="style"
                        tal:define="cssmedia style/media"
                                 tal:attributes="href style/src;
                                        media python: cssmedia if cssmedia != 'print' else '';
                                        rel string:preload;
                                        as string:style;
                                        title style/title"
                        onload="this.onload=null;this.rel='stylesheet'"
                    />
                    <noscript><link rel="stylesheet" tal:attributes="href style/src; media style/media" /></noscript>
                </tal:csspreload>
                <tal:nocsspreload tal:condition="python: not preload_css">
                    <link rel="style" type="text/css"
                             tal:attributes="href style/src;
                                media style/media;
                                rel style/rel;
                                title style/title" />
                </tal:nocsspreload>
            </tal:rendering-link>
            <tal:rendering-import condition="python: rendering == 'import'">
                <style type="text/css"
                         tal:attributes="media style/media"
                         tal:content="structure string:@import url(${style/src});">
                </style></tal:rendering-import>
            <tal:rendering-inline condition="python: rendering == 'inline'">
                <style type="text/css"
                         tal:attributes="media style/media"
                         tal:content="structure style/content">
                </style>
            </tal:rendering-inline>
            <tal:wcondcomment tal:condition="condcomment">
                <tal:closecc tal:replace="structure string:&lt;![endif]--&gt;" />
            </tal:wcondcomment>
        </tal:block>

    </tal:styles>

    <script type="text/javascript" tal:condition="preload_css">
        !function(t){"use strict";t.loadCSS||(t.loadCSS=function(){});var e=loadCSS.relpreload={};if(e.support=function(){var e;try{e=t.document.createElement("link").relList.supports("preload")}catch(t){e=!1}return function(){return e}}(),e.bindMediaToggle=function(t){function e(){t.media=a}var a=t.media||"all";t.addEventListener?t.addEventListener("load",e):t.attachEvent&&t.attachEvent("onload",e),setTimeout(function(){t.rel="stylesheet",t.media="only x"}),setTimeout(e,3e3)},e.poly=function(){if(!e.support())for(var a=t.document.getElementsByTagName("link"),n=0;n<a.length;n++){var o=a[n];"preload"!==o.rel||"style"!==o.getAttribute("as")||o.getAttribute("data-loadcss")||(o.setAttribute("data-loadcss",!0),e.bindMediaToggle(o))}},!e.support()){e.poly();var a=t.setInterval(e.poly,500);t.addEventListener?t.addEventListener("load",function(){e.poly(),t.clearInterval(a)}):t.attachEvent&&t.attachEvent("onload",function(){e.poly(),t.clearInterval(a)})}"undefined"!=typeof exports?exports.loadCSS=loadCSS:t.loadCSS=loadCSS}("undefined"!=typeof global?global:this);
    </script>

</tal:defines>
